<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:Nexi.UI.ViewModels"
             xmlns:models="using:Nexi.UI.Models"
             xmlns:material="using:Material.Icons.Avalonia"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Nexi.UI.Views.ChatView"
             x:CompileBindings="True"
             x:DataType="vm:ChatViewModel">

  <Grid RowDefinitions="*,Auto">
    <!-- Messages Area -->
    <ScrollViewer Grid.Row="0"
                 Name="MessagesScroll"
                 Background="{DynamicResource SystemChromeMediumColor}">
      <ItemsControl ItemsSource="{CompiledBinding Messages}">
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <StackPanel Spacing="16" Margin="20"/>
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.ItemTemplate>
          <DataTemplate x:DataType="models:ChatMessage">
            <Border Padding="16"
                    CornerRadius="20,20,20,4"
                    BoxShadow="0 2 8 0 #30000000"
                    Background="{CompiledBinding IsUser, Converter={StaticResource BoolToBackgroundConverter}}"
                    HorizontalAlignment="{CompiledBinding IsUser, Converter={StaticResource BoolToAlignmentConverter}}"
                    MaxWidth="600">
              <StackPanel>
                <TextBlock Text="{CompiledBinding Content}"
                         TextWrapping="Wrap"
                         FontSize="14"
                         Foreground="{CompiledBinding IsUser, Converter={StaticResource BoolToForegroundConverter}}"/>
                <TextBlock Text="{CompiledBinding Timestamp, StringFormat=\{0:t\}}"
                         FontSize="11"
                         Margin="0,8,0,0"
                         HorizontalAlignment="Right"
                         Foreground="{CompiledBinding IsUser, Converter={StaticResource BoolToForegroundConverter}}"/>
              </StackPanel>
            </Border>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>
    </ScrollViewer>

    <!-- Input Area -->
    <Border Grid.Row="1"
            Background="{DynamicResource SystemChromeMediumLowColor}"
            BorderBrush="{DynamicResource SystemAccentColor}"
            BorderThickness="0,1,0,0"
            BoxShadow="0 -4 8 0 #20000000">
      <Grid ColumnDefinitions="Auto,*,Auto,Auto"
            Margin="20">
        <!-- Voice Toggle -->
        <Border Grid.Column="0"
                CornerRadius="20"
                Background="Transparent">
          <ToggleButton Width="40"
                      Height="40"
                      CornerRadius="20"
                      BorderBrush="{DynamicResource SystemAccentColor}"
                      BorderThickness="1.5"
                      VerticalContentAlignment="Center"
                      HorizontalContentAlignment="Center"
                      IsChecked="{CompiledBinding IsVoiceModeEnabled}">
            <material:MaterialIcon Kind="Microphone" Width="20" Height="20"/>
          </ToggleButton>
        </Border>

        <!-- Text Input -->
        <TextBox Grid.Column="1"
                Text="{CompiledBinding CurrentMessage}"
                Watermark="Type a message..."
                Height="40"
                CornerRadius="20"
                BorderThickness="1.5"
                BorderBrush="{DynamicResource SystemAccentColor}"
                VerticalContentAlignment="Center"
                Margin="16,0"/>

        <!-- Clear Button -->
        <Border Grid.Column="2"
                CornerRadius="20"
                Background="Transparent"
                IsVisible="{CompiledBinding HasMessageText}">
          <Button Width="40"
                  Height="40"
                  CornerRadius="20"
                  VerticalContentAlignment="Center"
                  HorizontalContentAlignment="Center"
                  Command="{CompiledBinding ClearMessageCommand}">
            <material:MaterialIcon Kind="Close" Width="20" Height="20"/>
          </Button>
        </Border>

        <!-- Send Button -->
        <Button Grid.Column="3"
                Width="40"
                Height="40"
                CornerRadius="20"
                Margin="8,0,0,0"
                Classes="send-button"
                Background="{DynamicResource SystemAccentColor}"
                Command="{CompiledBinding SendMessageCommand}"
                IsEnabled="{CompiledBinding HasMessageText}">
          <material:MaterialIcon Kind="Send" Width="20" Height="20" Foreground="White"/>
        </Button>
      </Grid>
    </Border>
  </Grid>

  <UserControl.Styles>
    <!-- Send Button -->
    <Style Selector="Button.send-button">
      <Setter Property="Transitions">
        <Transitions>
          <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.2"/>
          <BrushTransition Property="Background" Duration="0:0:0.2"/>
        </Transitions>
      </Setter>
      <Setter Property="RenderTransform" Value="none"/>
    </Style>

    <Style Selector="Button.send-button:pointerover">
      <Setter Property="RenderTransform" Value="scale(1.1)"/>
      <Setter Property="Background" Value="{DynamicResource SystemAccentColorDark1}"/>
    </Style>

    <!-- Voice Toggle -->
    <Style Selector="ToggleButton">
      <Setter Property="Transitions">
        <Transitions>
          <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.2"/>
          <BrushTransition Property="Background" Duration="0:0:0.2"/>
        </Transitions>
      </Setter>
      <Setter Property="RenderTransform" Value="none"/>
    </Style>

    <Style Selector="ToggleButton:pointerover">
      <Setter Property="RenderTransform" Value="scale(1.1)"/>
    </Style>

    <!-- Clear Button -->
    <Style Selector="Button:not(.send-button)">
      <Setter Property="Transitions">
        <Transitions>
          <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.2"/>
        </Transitions>
      </Setter>
      <Setter Property="RenderTransform" Value="none"/>
    </Style>

    <Style Selector="Button:not(.send-button):pointerover">
      <Setter Property="RenderTransform" Value="scale(1.1)"/>
    </Style>

    <!-- Message Animation -->
    <Style Selector="Border.message">
      <Setter Property="Opacity" Value="0"/>
      <Setter Property="Transitions">
        <Transitions>
          <DoubleTransition Property="Opacity" Duration="0:0:0.3"/>
          <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.3"/>
        </Transitions>
      </Setter>
      <Setter Property="RenderTransform" Value="translateY(20px)"/>
    </Style>

    <Style Selector="Border.message.show">
      <Setter Property="Opacity" Value="1"/>
      <Setter Property="RenderTransform" Value="none"/>
    </Style>

    <!-- TextBox Animation -->
    <Style Selector="TextBox">
      <Setter Property="Transitions">
        <Transitions>
          <BrushTransition Property="BorderBrush" Duration="0:0:0.2"/>
        </Transitions>
      </Setter>
    </Style>

    <Style Selector="TextBox:focus">
      <Setter Property="BorderBrush" Value="{DynamicResource SystemAccentColor}"/>
    </Style>
    <Style Selector="TextBlock:not(.user)">
      <Setter Property="Foreground" Value="White"/>
    </Style>
  </UserControl.Styles>
</UserControl>