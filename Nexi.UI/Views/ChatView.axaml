<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:Nexi.UI.ViewModels"
             xmlns:material="using:Material.Icons.Avalonia"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Nexi.UI.Views.ChatView"
             x:CompileBindings="True"
             x:DataType="vm:ChatViewModel">

  <Design.DataContext>
    <vm:ChatViewModel />
  </Design.DataContext>

  <Grid RowDefinitions="*,Auto">
    <!-- Chat Messages Area -->
    <ScrollViewer Grid.Row="0"
                 Name="MessagesScroll"
                 Background="{DynamicResource SystemChromeMediumColor}">
      <ItemsControl ItemsSource="{CompiledBinding Messages}"
                   Margin="16,8">
        <ItemsControl.ItemTemplate>
          <DataTemplate x:DataType="vm:ChatMessage">
            <Border Margin="0,8"
                    Padding="16,12"
                    CornerRadius="12"
                    Background="{CompiledBinding IsUser, Converter={StaticResource BoolToBackgroundConverter}}"
                    HorizontalAlignment="{CompiledBinding IsUser, Converter={StaticResource BoolToAlignmentConverter}}"
                    MaxWidth="600"
                    BoxShadow="0 2 4 0 #20000000">
              <Border.Transitions>
                <Transitions>
                  <BrushTransition Property="Background" Duration="0:0:0.2"/>
                </Transitions>
              </Border.Transitions>
              <StackPanel>
                <TextBlock Text="{CompiledBinding Content}"
                         TextWrapping="Wrap"
                         FontSize="14"
                         Foreground="{CompiledBinding IsUser, Converter={StaticResource BoolToForegroundConverter}}"/>
                <TextBlock Text="{CompiledBinding Timestamp, StringFormat=\{0:t\}}"
                         FontSize="11"
                         Margin="0,4,0,0"
                         Opacity="0.6"/>
              </StackPanel>
            </Border>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>
    </ScrollViewer>

    <!-- Input Area -->
    <Border Grid.Row="1"
            BorderBrush="{DynamicResource SystemAccentColor}"
            BorderThickness="0,1,0,0"
            Background="{DynamicResource SystemChromeMediumColor}">
      <Grid ColumnDefinitions="Auto,*,Auto,Auto"
            Margin="16">
        <!-- Voice Toggle -->
        <ToggleButton Grid.Column="0"
                     Classes="voice-toggle"
                     IsChecked="{CompiledBinding IsVoiceModeEnabled}"
                     ToolTip.Tip="Toggle Voice Input">
          <material:MaterialIcon Kind="Microphone" />
        </ToggleButton>

        <!-- Text Input -->
        <TextBox Grid.Column="1"
                 Text="{CompiledBinding CurrentMessage}"
                 Watermark="Type a message..."
                 Margin="8,0"
                 Height="40"
                 VerticalContentAlignment="Center"
                 CornerRadius="20"/>

        <!-- Clear Button (only visible when there's text) -->
        <Button Grid.Column="2"
                Classes="clear-button"
                Command="{CompiledBinding ClearMessageCommand}"
                IsVisible="{CompiledBinding HasMessageText}">
          <material:MaterialIcon Kind="Close"/>
        </Button>

        <!-- Send Button -->
        <Button Grid.Column="3"
                Classes="send-button"
                Command="{CompiledBinding SendMessageCommand}"
                Margin="8,0,0,0">
          <material:MaterialIcon Kind="Send"/>
        </Button>
      </Grid>
    </Border>
  </Grid>

  <UserControl.Styles>
    <Style Selector="ToggleButton.voice-toggle">
      <Setter Property="Width" Value="40"/>
      <Setter Property="Height" Value="40"/>
      <Setter Property="CornerRadius" Value="20"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderBrush" Value="{DynamicResource SystemAccentColor}"/>
      <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style Selector="ToggleButton.voice-toggle:checked">
      <Setter Property="Background" Value="{DynamicResource SystemAccentColor}"/>
      <Setter Property="BorderBrush" Value="{DynamicResource SystemAccentColor}"/>
    </Style>

    <Style Selector="Button.clear-button">
      <Setter Property="Width" Value="40"/>
      <Setter Property="Height" Value="40"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Padding" Value="8"/>
      <Setter Property="CornerRadius" Value="20"/>
    </Style>

    <Style Selector="Button.send-button">
      <Setter Property="Width" Value="40"/>
      <Setter Property="Height" Value="40"/>
      <Setter Property="Background" Value="{DynamicResource SystemAccentColor}"/>
      <Setter Property="Padding" Value="8"/>
      <Setter Property="CornerRadius" Value="20"/>
    </Style>

    <Style Selector="Button.send-button:pointerover">
      <Setter Property="Background" Value="{DynamicResource SystemAccentColorDark1}"/>
    </Style>

    <Style Selector="material|MaterialIcon">
      <Setter Property="Width" Value="20"/>
      <Setter Property="Height" Value="20"/>
      <Setter Property="Foreground" Value="{DynamicResource TextControlForeground}"/>
    </Style>

    <Style Selector="ToggleButton.voice-toggle material|MaterialIcon">
      <Setter Property="Foreground" Value="{DynamicResource SystemAccentColor}"/>
    </Style>

    <Style Selector="ToggleButton.voice-toggle:checked material|MaterialIcon">
      <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style Selector="Button.send-button material|MaterialIcon">
      <Setter Property="Foreground" Value="White"/>
    </Style>
  </UserControl.Styles>
</UserControl>