<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:material="using:Material.Icons.Avalonia"
             xmlns:vm="clr-namespace:Nexi.UI.ViewModels"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Nexi.UI.Views.MainView"
             x:DataType="vm:MainViewModel">
  <Design.DataContext>
    <!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
    <vm:MainViewModel />
  </Design.DataContext>

  <UserControl.Styles>
    <!-- Button styles -->
    <Style Selector="Button.sidebar-button">
      <Setter Property="Height" Value="48"/>
      <Setter Property="HorizontalAlignment" Value="Stretch"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Padding" Value="0"/>
      <Setter Property="Margin" Value="4"/>
      <Setter Property="CornerRadius" Value="4"/>
      <Setter Property="Transitions">
        <Transitions>
          <ThicknessTransition Property="Padding" Duration="0:0:0.2"/>
        </Transitions>
      </Setter>
    </Style>

    <Style Selector="Button.sidebar-button:pointerover">
      <Setter Property="Background" Value="#40A880E4"/>
    </Style>

    <!-- Icon Container -->
    <Style Selector="Grid.icon-container">
      <Setter Property="Width" Value="48"/>
      <Setter Property="HorizontalAlignment" Value="Left"/>
      <Setter Property="Transitions">
        <Transitions>
          <ThicknessTransition Property="Margin" Duration="0:0:0.2"/>
        </Transitions>
      </Setter>
    </Style>

    <!-- Expanded state styles -->
    <Style Selector="StackPanel.menu-item">
      <Setter Property="Orientation" Value="Horizontal"/>
      <Setter Property="HorizontalAlignment" Value="Left"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="Spacing" Value="12"/>
    </Style>

    <!-- Icon styling -->
    <Style Selector="material|MaterialIcon">
      <Setter Property="Width" Value="24"/>
      <Setter Property="Height" Value="24"/>
      <Setter Property="HorizontalAlignment" Value="Center"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Sidebar transitions -->
    <Style Selector="Border.sidebar">
      <Setter Property="Transitions">
        <Transitions>
          <DoubleTransition Property="Width" Duration="0:0:0.2" Easing="CubicEaseOut"/>
        </Transitions>
      </Setter>
    </Style>
  </UserControl.Styles>

  <Grid ColumnDefinitions="Auto,*">
    <!-- Sidebar -->
    <Border Grid.Column="0"
            Classes="sidebar"
            Width="{Binding SidebarWidth}"
            Background="#1E1E1E">
      <DockPanel>
        <!-- Toggle Button -->
        <Button DockPanel.Dock="Top"
                Command="{Binding ToggleSidebarCommand}"
                Margin="8"
                Padding="8"
                Background="Transparent"
                HorizontalAlignment="Left">
          <material:MaterialIcon Kind="Menu" />
        </Button>

        <!-- Menu Items -->
        <StackPanel DockPanel.Dock="Top" Spacing="4" Margin="4,0">
          <!-- Home -->
          <Button Classes="sidebar-button"
                  Command="{Binding HomeCommand}">
            <Grid HorizontalAlignment="{Binding ButtonContentAlignment}">
              <Grid Classes="icon-container">
                <material:MaterialIcon Kind="Home"/>
              </Grid>
              <StackPanel Classes="menu-item" Margin="48,0,0,0"
                        IsVisible="{Binding IsSidebarExpanded}">
                <TextBlock Text="Home"/>
              </StackPanel>
            </Grid>
          </Button>

          <!-- Settings -->
          <Button Classes="sidebar-button"
                  Command="{Binding SettingsCommand}">
            <Grid HorizontalAlignment="{Binding ButtonContentAlignment}">
              <Grid Classes="icon-container">
                <material:MaterialIcon Kind="Cog"/>
              </Grid>
              <StackPanel Classes="menu-item" Margin="48,0,0,0"
                        IsVisible="{Binding IsSidebarExpanded}">
                <TextBlock Text="Settings"/>
              </StackPanel>
            </Grid>
          </Button>

          <!-- Voice -->
          <Button Classes="sidebar-button"
                  Command="{Binding VoiceCommand}">
            <Grid HorizontalAlignment="{Binding ButtonContentAlignment}">
              <Grid Classes="icon-container">
                <material:MaterialIcon Kind="Microphone"/>
              </Grid>
              <StackPanel Classes="menu-item" Margin="48,0,0,0"
                        IsVisible="{Binding IsSidebarExpanded}">
                <TextBlock Text="Voice Commands"/>
              </StackPanel>
            </Grid>
          </Button>

          <!-- AI Models -->
          <Button Classes="sidebar-button"
                  Command="{Binding AIModelsCommand}">
            <Grid HorizontalAlignment="{Binding ButtonContentAlignment}">
              <Grid Classes="icon-container">
                <material:MaterialIcon Kind="Brain"/>
              </Grid>
              <StackPanel Classes="menu-item" Margin="48,0,0,0"
                        IsVisible="{Binding IsSidebarExpanded}">
                <TextBlock Text="AI Models"/>
              </StackPanel>
            </Grid>
          </Button>

          <!-- About -->
          <Button Classes="sidebar-button"
                  Command="{Binding AboutCommand}">
            <Grid HorizontalAlignment="{Binding ButtonContentAlignment}">
              <Grid Classes="icon-container">
                <material:MaterialIcon Kind="Information"/>
              </Grid>
              <StackPanel Classes="menu-item" Margin="48,0,0,0"
                        IsVisible="{Binding IsSidebarExpanded}">
                <TextBlock Text="About"/>
              </StackPanel>
            </Grid>
          </Button>
        </StackPanel>
      </DockPanel>
    </Border>

    <!-- Main Content -->
    <ContentControl Grid.Column="1"
                  Content="{Binding CurrentPage}"/>
  </Grid>
</UserControl>
